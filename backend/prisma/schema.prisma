// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMINISTRATOR
  USER
}

model User {
  id         Int      @id @default(autoincrement())
  uuid       String   @db.Uuid
  created_at DateTime @default(now()) @db.Timestamptz(3)
  update_at  DateTime @default(now()) @updatedAt @db.Timestamptz(3)
  username   String   @unique @db.VarChar(100)
  email      String   @unique @db.VarChar(255)
  password   String
  full_name  String   @db.VarChar(255)
  token      String?
  role       Role     @default(USER)

  @@map("users")
}

model DeviceType {
  id         Int      @id @default(autoincrement())
  uuid       String   @db.Uuid
  created_at DateTime @default(now()) @db.Timestamptz(3)
  update_at  DateTime @default(now()) @updatedAt @db.Timestamptz(3)
  name       String   @unique @db.VarChar(100)
  gpses      Gps[]

  @@map("device_types")
}

model Gps {
  id         Int        @id @default(autoincrement())
  uuid       String     @db.Uuid
  created_at DateTime   @default(now()) @db.Timestamptz(3)
  update_at  DateTime   @default(now()) @updatedAt @db.Timestamptz(3)
  code       String     @unique @db.VarChar(255)
  device_type_id Int
  deviceType DeviceType @relation(fields: [device_type_id], references: [id], onDelete: Cascade)

  locations GpsesOnLocations[]

  @@map("gps")
}

model GpsesOnLocations {
  gps         Gps      @relation(fields: [gps_id], references: [id], onDelete: Cascade)
  gps_id      Int
  location    Location @relation(fields: [location_id], references: [id], onDelete: Cascade)
  location_id Int
  timestamp   DateTime @default(now()) @db.Timestamptz(3)

  @@id([gps_id, location_id, timestamp])
  @@map("gps_locations")
}

model Location {
  id         Int                @id @default(autoincrement())
  uuid       String             @db.Uuid
  created_at DateTime           @default(now()) @db.Timestamptz(3)
  update_at  DateTime           @default(now()) @updatedAt @db.Timestamptz(3)
  name       String             @unique @db.VarChar(255)
  latitude   Decimal            @db.Decimal(9, 6)
  longitude  Decimal            @db.Decimal(9, 6)
  gpses      GpsesOnLocations[]

  @@map("locations")
}
